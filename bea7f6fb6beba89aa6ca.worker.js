!function(e){var n={};function t(a){if(n[a])return n[a].exports;var o=n[a]={i:a,l:!1,exports:{}};return e[a].call(o.exports,o,o.exports,t),o.l=!0,o.exports}t.m=e,t.c=n,t.d=function(e,n,a){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:a})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(t.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var o in e)t.d(a,o,function(n){return e[n]}.bind(null,o));return a},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=0)}([function(e,n,t){"use strict";importScripts("https://cdn.jsdelivr.net/npm/@tensorflow/tfjs"),importScripts("http://mlweb.loria.fr/lalolib.js");var a=eval;a("var input = (id,x) => {}"),a("var output = (x) => {return 0;}"),a('\nvar loadResponders = {};\nvar sema = {\n  saveF32Array: (name, val) => {\n    postMessage({\n      "func": "save",\n      "name": name,\n      "val": val\n    });\n    return 0;\n  },\n  loadF32Array: (name, onload) => {\n    postMessage({\n      "func": "load",\n      "name": name,\n    });\n    loadResponders[name] = onload;\n    return 0;\n  },\n  download: (name) => {\n    postMessage({\n      "func": "download",\n      "name": name,\n    });\n  },\n  sendCode: (code) => {\n    postMessage({\n      "func": "sendcode",\n      "code": code,\n    });\n  }\n\n};\n'),onmessage=e=>{if(console.log("DEBUG:ml.worker:onmessage"),console.log(e),"eval"in e.data){let n=a(e.data.eval);null!=n?console.log(n):console.log("0")}else if("val"in e.data){let n=e.data.val;n=JSON.parse(`[${n}]`),loadResponders[e.data.name](n),delete loadResponders[e.data.name]}else"send"==e.data.rq?input(e.data.id,e.data.value):postMessage({func:"data",worker:"testmodel",val:output(e.data.value),tname:e.data.tname})}}]);