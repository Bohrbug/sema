{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./client/intermediateLanguage/IR.js","webpack:///./workers/il.worker.js"],"names":[],"mappings":"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AACjF;;AAEA;AACA;AACA;;AAEA;;AAEA,uBAAuB,0BAA0B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,UAAU,GAAG,oCAAoC;AAC3E,yBAAyB,kCAAkC;AAC3D;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,eAAe,KAAK,kBAAkB;AACjF,6BAA6B,OAAO,MAAM,kBAAkB;AAC5D;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,SAAS;AACrD,6BAA6B,OAAO;AACpC;AACA,OAAO;AACP;AACA;AACA;AACA,4BAA4B,GAAG;AAC/B,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,2BAA2B,SAAS;AACpC;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,0BAA0B,QAAQ,6BAA6B;AAC/D,0BAA0B,QAAQ,UAAU,UAAU,IAAI;;AAE1D;AACA,6BAA6B;AAC7B;;AAEA,yBAAyB,oBAAoB;AAC7C;AACA;AACA;AACA,gCAAgC,QAAQ,OAAO,OAAO,IAAI,aAAa,EAAE;AACzE,WAAW;AACX;AACA;AACA,+BAA+B,QAAQ,OAAO,OAAO,IAAI,aAAa,EAAE;AACxE;AACA;;AAEA,gCAAgC,SAAS;AACzC;AACA,0BAA0B,QAAQ;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,kBAAkB,GAAG,YAAY,WAAW;AACrE,sCAAsC,EAAE,UAAU,kBAAkB;AACpE;AACA;AACA;AACA;AACA;AACA;;AAEe,6EAAc,EAAC;;;;;;;;;;;;;AC1oB9B;AAAA;AAAkE;;;AAGlE;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,iBAAiB,0EAAc;AAC/B;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA","file":"9e180a0abab2df201625.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./workers/il.worker.js\");\n","\n\nvar objectID = 0;\n\nconst oscMap = {\n  '@sin': \"sinewave\",\n  \"@saw\": \"saw\",\n  \"@square\": \"square\",\n  \"@tri\": \"triangle\",\n  \"@pha\": \"phasor\"\n};\n\nconst jsFuncMap = {\n\tsaw: {\n\t\tsetup: (o, p) => `${o} = new Module.maxiOsc();\n                      ${o}.phaseReset(${p.length > 1 ? p[1].loop : 0.0});`,\n\t\tloop:  (o, p) => `${o}.saw(${p[0].loop})`\n\t},\n\tsin: {\n\t\tsetup: (o, p) => `${o} = new Module.maxiOsc();\n                      ${o}.phaseReset(${p.length > 1 ? p[1].loop : 0.0});`,\n\t\tloop:  (o, p) => `${o}.sinewave(${p[0].loop})`\n\t},\n\ttri: {\n\t\tsetup: (o, p) => `${o} = new Module.maxiOsc();\n                      ${o}.phaseReset(${p.length > 1 ? p[1].loop : 0.0});`,\n\t\tloop:  (o, p) => `${o}.triangle(${p[0].loop})`\n\t},\n\tpha: {\n\t\tsetup: (o, p) => `${o} = new Module.maxiOsc();\n                      ${o}.phaseReset(${p.length > 1 ? p[1].loop : 0.0});`,\n\t\tloop:  (o, p) => `${o}.phasor(${p[0].loop})`\n\t},\n\tph2: {\n\t\tsetup: (o, p) => `${o} = new Module.maxiOsc();\n                      ${o}.phaseReset(${p.length > 3 ? p[3].loop : 0.0});`,\n\t\tloop:  (o, p) => `${o}.phasor(${p[0].loop},${p[1].loop},${p[2].loop})`\n\t},\n\tsqr: {\n\t\tsetup: (o, p) => `${o} = new Module.maxiOsc();\n                      ${o}.phaseReset(${p.length > 1 ? p[1].loop : 0.0});`,\n\t\tloop:  (o, p) => `${o}.square(${p[0].loop})`\n\t},\n\tpul: {\n\t\tsetup: (o, p) => `${o} = new Module.maxiOsc();\n                      ${o}.phaseReset(${p.length > 2 ? p[2].loop : 0.0});`,\n\t\tloop:  (o, p) => `${o}.pulse(${p[0].loop},${p[1].loop})`\n\t},\n\timp: {\n\t\tsetup: (o, p) => `${o} = new Module.maxiOsc();\n                      ${o}.phaseReset(${p.length > 1 ? p[1].loop : 0.0});`,\n\t\tloop:  (o, p) => `${o}.impulse(${p[0].loop})`\n\t},\n\tsawn: {\n\t\tsetup: (o, p) => `${o} = new Module.maxiOsc();\n                      ${o}.phaseReset(${p.length > 1 ? p[1].loop : 0.0});`,\n\t\tloop:  (o, p) => `${o}.sawn(${p[0].loop})`\n\t},\n\tnoiz: {\n\t\tsetup: (o, p) => `${o} = new Module.maxiOsc()`,\n\t\tloop:  (o, p) => `${o}.noise()*${p[0].loop}`\n\t},\n\tgt: {\n\t\tsetup: (o, p) => \"\",\n\t\tloop:  (o, p) => `(${p[0].loop} > ${p[1].loop}) ? 1 : 0`\n\t},\n\tlt: {\n\t\tsetup: (o, p) => \"\",\n\t\tloop:  (o, p) => `(${p[0].loop} < ${p[1].loop}) ? 1 : 0`\n\t},\n\tmod: {\n    setup: (o, p) => \"\",\n    loop:  (o, p) => `(${p[0].loop} % ${p[1].loop})` },\n\tadd: {\n\t\tsetup: (o, p) => \"\",\n\t\tloop:  (o, p) => `Module.maxiMath.add(${p[0].loop},${p[1].loop})`\n\t},\n\tmul: {\n\t\tsetup: (o, p) => \"\",\n\t\tloop:  (o, p) => `Module.maxiMath.mul(${p[0].loop},${p[1].loop})`\n\t},\n\tsub: {\n\t\tsetup: (o, p) => \"\",\n\t\tloop:  (o, p) => `Module.maxiMath.sub(${p[0].loop},${p[1].loop})`\n\t},\n\tdiv: {\n\t\tsetup: (o, p) => \"\",\n\t\tloop:  (o, p) => `Module.maxiMath.div(${p[0].loop},${p[1].loop})`\n\t},\n\tpow: {\n\t\tsetup: (o, p) => \"\",\n\t\tloop:  (o, p) => `Module.maxiMath.pow(${p[0].loop},${p[1].loop})`\n\t},\n\tabs: {\n\t\tsetup: (o, p) => \"\",\n\t\tloop:  (o, p) => `Module.maxiMath.abs(${p[0].loop})`\n\t},\n\tenv: {\n\t\tsetup: (o, p) => `${o} = new Module.maxiEnv();\n                      ${o}.setAttack(${p[1].loop});\n                      ${o}.setDecay(${p[2].loop});\n                      ${o}.setSustain(${p[3].loop});\n                      ${o}.setRelease(${p[4].loop})`,\n\t\tloop:  (o, p) => `${o}.adsr(1,${p[0].loop})`\n\t},\n\tsum: {\n\t\tsetup: (o, p) => \"\",\n\t\tloop:  (o, p) => {\n      let s = `(${p[0].loop}`;\n\t\t\tfor (let i = 1; i < p.length; i++)\n        s += `+${p[i].loop}`;\n\t\t\treturn s + \")\";\t}\n\t},\n\tmix: {\n\t\tsetup: (o, p) => \"\",\n\t\tloop:  (o, p) => {\n\t\t\tlet s = `((${p[0].loop}`;\n\t\t\tfor (let i = 1; i < p.length; i++)\n        s += `+${p[i].loop}`;\n\t\t\treturn s + `)/${p.length})`;\n\t\t}\n\t},\n\tprod: {\n\t\tsetup: (o, p) => \"\",\n\t\tloop:  (o, p) => {\n\t\t\tlet s = `(${p[0].loop}`;\n\t\t\tfor (let i = 1; i < p.length; i++)\n        s += `*${p[i].loop}`;\n\t\t\treturn s + \")\";\n\t\t}\n\t},\n\tblin: {\n\t\tsetup: (o, p) => \"\",\n\t\tloop:  (o, p) => `Module.maxiMap.linlin(${p[0].loop}, -1, 1, ${p[1].loop}, ${p[2].loop})`\n\t},\n\tulin: {\n\t\tsetup: (o, p) => \"\",\n\t\tloop:  (o, p) => `Module.maxiMap.linlin(${p[0].loop}, 0, 1, ${p[1].loop}, ${p[2].loop})`\n\t},\n\tbexp: {\n\t\tsetup: (o, p) => \"\",\n\t\tloop:  (o, p) => `Module.maxiMap.linexp(${p[0].loop}, -1, 1, ${p[1].loop}, ${p[2].loop})`\n\t},\n\tuexp: {\n\t\tsetup: (o, p) => \"\",\n\t\tloop:  (o, p) => `Module.maxiMap.linexp(${p[0].loop}, 0.0000001, 1, ${p[1].loop}, ${p[2].loop})`\n\t},\n\tlinlin: {\n\t\tsetup: (o, p) => \"\",\n\t\tloop:  (o, p) => `Module.maxiMap.linlin(${p[0].loop}, ${p[1].loop}, ${p[2].loop}),${p[3].loop}, ${p[4].loop})`\n\t},\n\tlinexp: {\n\t\tsetup: (o, p) => \"\",\n\t\tloop:  (o, p) => `Module.maxiMap.linexp(${p[0].loop}, ${p[1].loop}, ${p[2].loop}), ${p[3].loop}, ${p[4].loop})`\n\t},\n\tdist: {\n\t\tsetup: (o, p) => `${o} = new Module.maxiDistortion()`,\n\t\tloop:  (o, p) => `${o}.atanDist(${p[0].loop},${p[1].loop})`\n\t},\n\tflange: {\n\t\tsetup: (o, p) => `${o} = new Module.maxiFlanger()`,\n\t\tloop:  (o, p) => `${o}.flange(${p[0].loop},${p[1].loop},${p[2].loop},${p[3].loop},${p[4].loop})`\n\t},\n\tchor: {\n\t\tsetup: (o, p) => `${o} = new Module.maxiChorus()`,\n\t\tloop:  (o, p) => `${o}.chorus(${p[0].loop},${p[1].loop},${p[2].loop},${p[3].loop},${p[4].loop})`\n\t},\n\tdl: {\n\t\tsetup: (o, p) => `${o} = new Module.maxiDelayline()`,\n\t\tloop:  (o, p) => `${o}.dl(${p[0].loop},${p[1].loop},${p[2].loop})`\n\t},\n\tlpf: {\n\t\tsetup: (o, p) => `${o} = new Module.maxiFilter()`,\n\t\tloop:  (o, p) => `${o}.lopass(${p[0].loop},${p[1].loop})`\n\t},\n\thpf: {\n\t\tsetup: (o, p) => `${o} = new Module.maxiFilter()`,\n\t\tloop:  (o, p) => `${o}.hipass(${p[0].loop},${p[1].loop})`\n\t},\n\tlpz: {\n\t\tsetup: (o, p) => `${o} = new Module.maxiFilter()`,\n\t\tloop:  (o, p) => `${o}.lores(${p[0].loop},${p[1].loop},${p[2].loop})`\n\t},\n\thpz: {\n\t\tsetup: (o, p) => `${o} = new Module.maxiFilter()`,\n\t\tloop:  (o, p) => `${o}.hires(${p[0].loop},${p[1].loop},${p[2].loop})`\n\t},\n\ttoJS: {\n\t\tsetup: (o, p) => `${o} = this.registerTransducer('${o}', ${p[0].loop})`,\n\t\tloop:  (o, p) => `${o}.send(${p[1].loop}, ${p[2].loop})`\n\t},\n\tfromJS: {\n\t\tsetup: (o, p) => `${o} = this.registerTransducer('${o}', ${p[0].loop})`,\n\t\tloop:  (o, p) => `${o}.receive(${p[1].loop})`\n\t},\n\t// 'adc': {\"setup\":(o,p)=>\"\", \"loop\":(o,p)=>`inputs[${p[0].loop}]`},\n\t// adc: { setup: (o, p) => \"\", loop: (o, p) => `inputs` },\n\t// sampler: {\n\t// \tsetup: (o, p) => `${o} = new Module.maxiSample();\n  //                     ${o}.setSample(this.getSampleBuffer(${p[1].loop}));`,\n\t// \tloop:  (o, p) => `(${o}.isReady() ? ${o}.playOnZX(${p[0].loop}) : 0.0)`\n\t// },\n\t// loop: {\n\t// \tsetup: (o, p) => `${o} = new Module.maxiSample();\n  //                     ${o}.setSample(this.getSampleBuffer(${p[1].loop}));`,\n\t// \tloop:  (o, p) => `(${o}.isReady() ? ${o}.play(${p[0].loop}) : 0.0)`\n\t// },\n\toscin: {\n\t\tsetup: (o, p) => \"\",\n\t\tloop:  (o, p) => `this.OSCTransducer(${p[0].loop},${p[1].loop})`\n\t},\n\toscout: {\n\t\tsetup: (o, p) => \"\",\n\t\tloop:  (o, p) => `this.OSCTransducer(${p[0].loop},${p[1].loop})`\n\t},\n\tsah: {\n\t\tsetup: (o, p) => `${o} = new Module.maxiSampleAndHold();`,\n\t\tloop:  (o, p) => `${o}.sah(${p[0].loop},${p[1].loop})`\n\t},\n\tstretch: {\n\t\tsetup: (o, p) => `${o} = new Module.maxiSample();\n                      ${o}.setSample(this.getSampleBuffer(${p[4].loop}));\n                      ${o}stretch = new Module.maxiStretch();\n                      ${o}stretch.setSample(${o});`,\n\t\tloop:  (o, p) => `(${o}.isReady() ? ${o}stretch.play(${p[0].loop},${p[1].loop},${p[2].loop},${p[3].loop},0.0) : 0.0)`\n\t},\n  blin: {\n\t\tsetup: (o, p) => \"\",\n\t\tloop:  (o, p) => `Module.maxiMap.linlin(${p[0].loop}, -1, 1, ${p[1].loop}, ${p[2].loop})`\n\t},\n\tulin: {\n\t\tsetup: (o, p) => \"\",\n\t\tloop:  (o, p) => `Module.maxiMap.linlin(${p[0].loop}, 0, 1, ${p[1].loop}, ${p[2].loop})`\n\t},\n\tbexp: {\n\t\tsetup: (o, p) => \"\",\n\t\tloop:  (o, p) => `Module.maxiMap.linexp(${p[0].loop}, -1, 1, ${p[1].loop}, ${p[2].loop})`\n\t},\n\tuexp: {\n\t\tsetup: (o, p) => \"\",\n\t\tloop:  (o, p) => `Module.maxiMap.linexp(${p[0].loop}, 0.0000001, 1, ${p[1].loop}, ${p[2].loop})`\n\t},\n\tlinlin: {\n\t\tsetup: (o, p) => \"\",\n\t\tloop:  (o, p) => `Module.maxiMap.linlin(${p[0].loop}, ${p[1].loop}, ${p[2].loop}),${p[3].loop}, ${p[4].loop})`\n\t},\n\tlinexp: {\n\t\tsetup: (o, p) => \"\",\n\t\tloop:  (o, p) => `Module.maxiMap.linexp(${p[0].loop}, ${p[1].loop}, ${p[2].loop}), ${p[3].loop}, ${p[4].loop})`\n\t},\n\tdist: {\n\t\tsetup: (o, p) => `${o} = new Module.maxiDistortion()`,\n\t\tloop:  (o, p) => `${o}.atanDist(${p[0].loop},${p[1].loop})`\n\t},\n\tflange: {\n\t\tsetup: (o, p) => `${o} = new Module.maxiFlanger()`,\n\t\tloop:  (o, p) => `${o}.flange(${p[0].loop},${p[1].loop},${p[2].loop},${p[3].loop},${p[4].loop})`\n\t},\n\tchor: {\n\t\tsetup: (o, p) => `${o} = new Module.maxiChorus()`,\n\t\tloop:  (o, p) => `${o}.chorus(${p[0].loop},${p[1].loop},${p[2].loop},${p[3].loop},${p[4].loop})`\n\t},\n\tdl: {\n\t\tsetup: (o, p) => `${o} = new Module.maxiDelayline()`,\n\t\tloop:  (o, p) => `${o}.dl(${p[0].loop},${p[1].loop},${p[2].loop})`\n\t},\n\tlpf: {\n\t\tsetup: (o, p) => `${o} = new Module.maxiFilter()`,\n\t\tloop:  (o, p) => `${o}.lopass(${p[0].loop},${p[1].loop})`\n\t},\n\thpf: {\n\t\tsetup: (o, p) => `${o} = new Module.maxiFilter()`,\n\t\tloop:  (o, p) => `${o}.hipass(${p[0].loop},${p[1].loop})`\n\t},\n\tlpz: {\n\t\tsetup: (o, p) => `${o} = new Module.maxiFilter()`,\n\t\tloop:  (o, p) => `${o}.lores(${p[0].loop},${p[1].loop},${p[2].loop})`\n\t},\n\thpz: {\n\t\tsetup: (o, p) => `${o} = new Module.maxiFilter()`,\n\t\tloop:  (o, p) => `${o}.hires(${p[0].loop},${p[1].loop},${p[2].loop})`\n\t},\n\ttoJS: {\n\t\tsetup: (o, p) => `${o} = this.registerTransducer('${o}', ${p[0].loop})`,\n\t\tloop:  (o, p) => `${o}.send(${p[1].loop}, ${p[2].loop})`\n\t},\n\tfromJS: {\n\t\tsetup: (o, p) => `${o} = this.registerTransducer('${o}', ${p[0].loop})`,\n\t\tloop:  (o, p) => `${o}.receive(${p[1].loop})`\n\t},\n\t// 'adc': {\"setup\":(o,p)=>\"\", \"loop\":(o,p)=>`inputs[${p[0].loop}]`},\n\tadc: { setup: (o, p) => \"\", loop: (o, p) => `inputs` },\n\tsampler: {\n\t\tsetup: (o, p) => `${o} = new Module.maxiSample();\n                      ${o}.setSample(this.getSampleBuffer(${p[1].loop}));`,\n\t\tloop:  (o, p) => `(${o}.isReady() ? ${o}.playOnZX(${p[0].loop}) : 0.0)`\n\t},\n  loop: {\n\t\tsetup: (o, p) => `${o} = new Module.maxiSample();\n                      ${o}.setSample(this.getSampleBuffer(${p[1].loop}));`,\n\t\tloop:  (o, p) => `(${o}.isReady() ? ${o}.play(${p[0].loop}) : 0.0)`\n\t},\n  slice: {\n\t\tsetup: (o, p) => `${o} = new Module.maxiSample();\n                      ${o}.setSample(this.getSampleBuffer(${p[2].loop}));`,\n\t\tloop:  (o, p) => `(${o}.isReady() ? ${o}.loopSetPosOnZX(${p[0].loop},${p[1].loop}) : 0.0)`\n\t},\n\toscin: {\n\t\tsetup: (o, p) => \"\",\n\t\tloop:  (o, p) => `this.OSCTransducer(${p[0].loop},${p[1].loop})`\n\t},\n\toscout: {\n\t\tsetup: (o, p) => \"\",\n\t\tloop:  (o, p) => `this.OSCTransducer(${p[0].loop},${p[1].loop})`\n\t},\n\tsah: {\n\t\tsetup: (o, p) => `${o} = new Module.maxiSampleAndHold();`,\n\t\tloop:  (o, p) => `${o}.sah(${p[0].loop},${p[1].loop})`\n\t},\n\tstretch: {\n\t\tsetup: (o, p) => `${o} = new Module.maxiSample();\n                      ${o}.setSample(this.getSampleBuffer(${p[4].loop}));\n                      ${o}stretch = new Module.maxiStretch();\n                      ${o}stretch.setSample(${o});`,\n\t\tloop:  (o, p) => `(${o}.isReady() ? ${o}stretch.play(${p[0].loop},${p[1].loop},${p[2].loop},${p[3].loop},0.0) : 0.0)`\n\t},\n  bitToSig: {\n\t\tsetup: (o, p) => \"\",\n\t\tloop:  (o, p) => `Module.maxiBits.toSignal(${p[0].loop})`\n\t},\n  bitToTrigSig: {\n  \t\tsetup: (o, p) => \"\",\n  \t\tloop:  (o, p) => `Module.maxiBits.toTrigSignal(${p[0].loop})`\n  \t},\n  bitNeg: {\n\t\tsetup: (o, p) => \"\",\n\t\tloop:  (o, p) => `Module.maxiBits.neg(${p[0].loop})`\n\t},\n  bitInc: {\n\t\tsetup: (o, p) => \"\",\n\t\tloop:  (o, p) => `Module.maxiBits.inc(${p[0].loop})`\n\t},\n  bitDec: {\n\t\tsetup: (o, p) => \"\",\n\t\tloop:  (o, p) => `Module.maxiBits.dec(${p[0].loop})`\n\t},\n  bitAnd: {\n\t\tsetup: (o, p) => \"\",\n\t\tloop:  (o, p) => `Module.maxiBits.land(${p[0].loop},${p[1].loop})`\n\t},\n  bitOr: {\n\t\tsetup: (o, p) => \"\",\n\t\tloop:  (o, p) => `Module.maxiBits.lor(${p[0].loop},${p[1].loop})`\n\t},\n  bitXor: {\n\t\tsetup: (o, p) => \"\",\n\t\tloop:  (o, p) => `Module.maxiBits.lxor(${p[0].loop},${p[1].loop})`\n\t},\n  bitShl: {\n\t\tsetup: (o, p) => \"\",\n\t\tloop:  (o, p) => `Module.maxiBits.shl(${p[0].loop},${p[1].loop})`\n\t},\n  bitShr: {\n\t\tsetup: (o, p) => \"\",\n\t\tloop:  (o, p) => `Module.maxiBits.shr(${p[0].loop},${p[1].loop})`\n\t},\n  bitAt: {\n\t\tsetup: (o, p) => \"\",\n\t\tloop:  (o, p) => `Module.maxiBits.at(${p[0].loop},${p[1].loop})`\n\t},\n  bitAdd: {\n\t\tsetup: (o, p) => \"\",\n\t\tloop:  (o, p) => `Module.maxiBits.add(${p[0].loop},${p[1].loop})`\n\t},\n  bitSub: {\n\t\tsetup: (o, p) => \"\",\n\t\tloop:  (o, p) => `Module.maxiBits.sub(${p[0].loop},${p[1].loop})`\n\t},\n  bitMul: {\n\t\tsetup: (o, p) => \"\",\n\t\tloop:  (o, p) => `Module.maxiBits.mul(${p[0].loop},${p[1].loop})`\n\t},\n  bitEq: {\n\t\tsetup: (o, p) => \"\",\n\t\tloop:  (o, p) => `Module.maxiBits.eq(${p[0].loop},${p[1].loop})`\n\t},\n  bitGt: {\n\t\tsetup: (o, p) => \"\",\n\t\tloop:  (o, p) => `Module.maxiBits.gt(${p[0].loop},${p[1].loop})`\n\t},\n  bitGte: {\n\t\tsetup: (o, p) => \"\",\n\t\tloop:  (o, p) => `Module.maxiBits.gte(${p[0].loop},${p[1].loop})`\n\t},\n  bitLte: {\n\t\tsetup: (o, p) => \"\",\n\t\tloop:  (o, p) => `Module.maxiBits.lte(${p[0].loop},${p[1].loop})`\n\t},\n  bitLt: {\n\t\tsetup: (o, p) => \"\",\n\t\tloop:  (o, p) => `Module.maxiBits.lt(${p[0].loop},${p[1].loop})`\n\t},\n  setup: (o, p) => \"\",\n  bitDiv: {\n\t\tloop:  (o, p) => `Module.maxiBits.div(${p[0].loop},${p[1].loop})`\n\t},\n  bitr: {\n\t\tsetup: (o, p) => \"\",\n\t\tloop:  (o, p) => `Module.maxiBits.at(${p[0].loop},${p[1].loop},${p[2].loop})`\n\t},\n  bitnoise: {\n\t\tsetup: (o, p) => \"\",\n\t\tloop:  (o, p) => `Module.maxiBits.noise()`\n\t},\n  btime: {\n\t\tsetup: (o, p) =>``,\n\t\tloop:  (o, p) => `this.bitTime`\n\t},\n  bitFromSig: {\n\t\tsetup: (o, p) => \"\",\n\t\tloop:  (o, p) => `Module.maxiBits.fromSignal(${p[0].loop})`\n\t},\n  clp: {\n\t\tsetup: (o, p) => \"\",\n\t\tloop:  (o, p) => `this.clockPhase(${p[0].loop},${p.length > 1 ? p[1].loop : 0})`\n\t},\n  clt: {\n\t\tsetup: (o, p) => \"\",\n\t\tloop:  (o, p) => `this.clockTrig(${p[0].loop},${p.length > 1 ? p[1].loop : 0})`\n\t},\n  clfreq: {\n\t\tsetup: (o, p) => \"\",\n\t\tloop:  (o, p) => `this.setClockFreq(${p[0].loop})`\n\t},\n  clbpm: {\n\t\tsetup: (o, p) => \"\",\n\t\tloop:  (o, p) => `this.setClockFreq(60/${p[0].loop})`\n\t},\n  onzx: {\n\t\tsetup: (o, p) => `${o} = new Module.maxiTrigger();`,\n\t\tloop:  (o, p) => `${o}.onZX(${p[0].loop})`\n\t},\n  onchange: {\n\t\tsetup: (o, p) => `${o} = new Module.maxiTrigger();`,\n\t\tloop:  (o, p) => `${o}.onChanged(${p[0].loop},${p[1].loop})`\n\t},\n  count: {\n\t\tsetup: (o, p) => `${o} = new Module.maxiCounter();`,\n\t\tloop:  (o, p) => `${o}.count(${p[0].loop},${p[1].loop})`\n\t},\n  idx: {\n\t\tsetup: (o, p) => `${o} = new Module.maxiIndex();`,\n\t\tloop:  (o, p) => `${o}.pull(${p[0].loop},${p[1].loop},${p[2].loop})`\n  },\n  svf: {\n    //set cutoff and resonance only when params change to save CPU\n\t\tsetup: (o, p) => `${o} = new Module.maxiSVF(); ${o}_p1 = new Module.maxiTrigger(); ${o}_p2 = new Module.maxiTrigger();`,\n\t\tloop:  (o, p) => `(()=>{${o}_cutoff = ${p[1].loop}; if (${o}_p1.onChanged(${o}_cutoff, 1e-5)) {${o}.setCutoff(${o}_cutoff)};\n                            ${o}_res = ${p[2].loop}; if (${o}_p2.onChanged(${o}_res, 1e-5)) {${o}.setResonance(${o}_res)};\n                        return ${o}.play(${p[0].loop},${p[3].loop},${p[4].loop},${p[5].loop},${p[6].loop})})()`\n  },\n  bitclock: {\n    setup: (o, p) => \"\",\n\t\tloop:  (o, p) => `this.bitclock`\n  },\n  pvshift: {\n\t\tsetup: (o, p) => `${o} = new pvshift();`,\n\t\tloop:  (o, p) => `${o}.play(${p[0].loop},${p[1].loop})`\n\t},\n};\n\nclass IRToJavascript {\n\n  static getNextID() {\n    objectID = objectID > 9999 ? 0 : ++objectID;\n    return objectID;\n  }\n\n  static emptyCode() {\n    return {\n      \"setup\": \"\",\n      \"loop\": \"\",\n      \"paramMarkers\": []\n    };\n  }\n\n  static traverseTree(t, code, level, vars) {\n    // console.log(`DEBUG:IR:traverseTree:level: ${level}`);\n    // console.log(`DEBUG:IR:traverseTree:vars:`);\n    // console.log(vars);\n    let attribMap = {\n      '@lang': (ccode, el) => {\n        let statements = [];\n        el.map((langEl) => {\n          let statementCode = IRToJavascript.traverseTree(langEl, IRToJavascript.emptyCode(), level, vars);\n          // console.log(\"@lang: \" + statementCode.loop);\n          ccode.setup += statementCode.setup;\n          ccode.loop += statementCode.loop;\n          // ccode.paramMarkers\n        });\n        return ccode;\n      },\n      '@sigOut': (ccode, el) => {\n        ccode = IRToJavascript.traverseTree(el, ccode, level, vars);\n        ccode.loop = `q.sigOut = ${ccode.loop};`;\n        return ccode;\n      },\n      '@spawn': (ccode, el) => {\n        ccode = IRToJavascript.traverseTree(el, ccode, level, vars);\n        ccode.loop += \";\";\n        return ccode;\n      },\n      '@sigp': (ccode, el) => {\n        let paramMarkers = [{\"s\":el['paramBegin'], \"e\":el['paramEnd'], \"l\":level}]\n        ccode.paramMarkers = ccode.paramMarkers.concat(paramMarkers);\n\n        let functionName = el['@func'].value;\n        let funcInfo = jsFuncMap[functionName];\n        let objName = \"q.u\" + IRToJavascript.getNextID();\n\n        let allParams=[];\n\n        for (let p = 0; p < el['@params'].length; p++) {\n          let params = IRToJavascript.emptyCode();\n          params = IRToJavascript.traverseTree(el['@params'][p], params, level+1, vars);\n          // console.log(params);\n          allParams[p] = params;\n        }\n        // console.log(allParams);\n        let setupCode = \"\";\n        for (let param in allParams) {\n          setupCode += allParams[param].setup;\n          ccode.paramMarkers = ccode.paramMarkers.concat(allParams[param].paramMarkers);\n        }\n        ccode.setup += `${setupCode} ${funcInfo.setup(objName, allParams)};`;\n        ccode.loop += `${funcInfo.loop(objName, allParams)}`;\n        return ccode;\n      },\n      '@setvar': (ccode, el) => {\n        // console.log(\"DEBUG:traverseTree:@setvar\");\n        // console.log(vars);\n        // console.log(el['@varname']);\n        let variableName = el['@varname'].value;\n        // console.log(variableName);\n        let memIdx = vars[variableName];\n        // console.log(memIdx);\n        if (memIdx == undefined) {\n          // console.log(\"var not found\");\n          memIdx = Object.keys(vars).length;\n          vars[variableName] = memIdx;\n          // console.log(memIdx);\n        }\n        let varValueCode = IRToJavascript.traverseTree(el['@varvalue'], IRToJavascript.emptyCode(), level+1, vars);\n        ccode.setup += varValueCode.setup;\n        // ccode.loop = `this.setvar(q, '${el['@varname']}', ${varValueCode.loop})`;\n        ccode.loop = `(mem[${memIdx}] = ${varValueCode.loop})`;\n        return ccode;\n      },\n      '@getvar': (ccode, el) => {\n        let memIdx = vars[el.value];\n        if (memIdx == undefined) {\n          memIdx = Object.keys(vars).length;\n          vars[el.value] = memIdx;\n        }\n        // ccode.loop += `this.getvar(q, '${el.value}')`;\n        ccode.loop += `mem[${memIdx}]`;\n        return ccode;\n      },\n      '@string': (ccode, el) => {\n        if (typeof el === 'string' || el instanceof String) {\n          // console.log(\"String: \" + el);\n          ccode.loop += `'${el}'`;\n        } else {\n          ccode = IRToJavascript.traverseTree(el, ccode, level, vars);\n        }\n        return ccode;\n      },\n      '@num': (ccode, el) => {\n        if (el.value) {\n          ccode.loop += `${el.value}`;\n        }\n        //  else {\n        //   ccode = IRToJavascript.traverseTree(el, ccode, level);\n        // }\n        return ccode;\n      },\n      '@list': (ccode, el) => {\n        //a list can be static and/or dynamic\n        //create a vector for the list\n        let objName = \"q.l\" + IRToJavascript.getNextID();\n        ccode.setup += `${objName} = new Module.VectorDouble();`;\n        ccode.setup += `${objName}.resize(${el.length},0);`;\n\n        //in the loop, we create a function that returns the list. It might also update dynamic elements of the list\n        ccode.loop += `(()=>{`;\n        let extraSetupCode = \"\";\n\n        for(let i_list=0; i_list < el.length; i_list++) {\n          //if the element is a static number, set this element once in the setup code\n          let element =  IRToJavascript.traverseTree(el[i_list], IRToJavascript.emptyCode(), level, vars);\n          if(Object.keys(el[i_list])[0] == '@num') {\n              ccode.setup += `${objName}.set(${i_list}, ${element.loop});`;\n          }else{\n              //if the element not a number, set this element each update before returning the list\n              extraSetupCode += element.setup;\n              ccode.loop += `${objName}.set(${i_list}, ${element.loop});`;\n          }\n        }\n\n        ccode.loop += `return ${objName}})()`;\n        ccode.setup += extraSetupCode;\n        // ccode.loop+=`${objName}`;\n        console.log(ccode);\n        return ccode;\n      }\n    }\n\n    if (Array.isArray(t)) {\n      t.map((el) => {\n        Object.keys(el).map((k) => {\n          // console.log(\"DEBUG:traverseTree:@ARRAYAttribMap\");\n          // console.log(k);\n          code = attribMap[k](code, el[k]);\n        });\n      })\n    } else {\n      Object.keys(t).map((k) => {\n        // console.log(\"DEBUG:traverseTree:@OBJECTAttribMap\");\n        // console.log(k);\n        code = attribMap[k](code, t[k]);\n      });\n    }\n    return code;\n  }\n\n  static treeToCode(tree) {\n    // console.log(tree);\n    let vars = {};\n    console.log(\"1\");\n    let code = IRToJavascript.traverseTree(tree, IRToJavascript.emptyCode(), 0, vars);\n    console.log(\"2\");\n    code.setup = `() => {let q=this.newq(); ${code.setup}; return q;}`;\n    code.loop = `(q, inputs, mem) => {${code.loop} return q.sigOut;}`\n    console.log(\"DEBUG:treeToCode\");\n    console.log(code.loop);\n    // console.log(code.paramMarkers);\n    return code;\n  }\n}\n\nexport default IRToJavascript;\n","import IRToJavascript from \"../client/intermediateLanguage/IR.js\";\n\n\nonmessage = m => {\n\tif (m.data !== undefined) {\n\t\ttry {\n\t\t\t// postMessage({\n\t\t\t// \ttreeTS: 1\n\t\t\t// });\n      // console.log(\"DEBUG:il.worker:onmessage:data\");\n\t\t\t// console.log(JSON.stringify(m.data.liveCodeAbstractSyntaxTree));\n\n      // console.log(\"DEBUG:il.worker:onmessage:treeToCode\");\n\t\t\tlet dspCode = IRToJavascript.treeToCode(\n\t\t\t\tm.data.liveCodeAbstractSyntaxTree[0] //take the first grammer in case the grammar was ambiguous\n\t\t\t);\n\n      // console.log(\"DEBUG:il.worker:onmessage:dspCode\");\n      // console.log(dspCode);\n\n\t\t\tdspCode.paramMarkers = JSON.stringify(dspCode.paramMarkers);\n\t\t\tpostMessage(dspCode);\n\t\t} catch (err) {\n      console.log(\"DEBUG:il.worker:onmessage:catch\");\n\t\t\tconsole.log(err);\n\t\t}\n\t}\n};\n"],"sourceRoot":""}