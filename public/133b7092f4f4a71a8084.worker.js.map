{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./workers/ml.worker.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFa;AACb,0CAA0C;AAC1C;AACA;AACA;AACA;;AAEA;AACA,iBAAiB;AACjB,+BAA+B;AAC/B,4BAA4B,UAAU;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,IAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA","file":"133b7092f4f4a71a8084.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./workers/ml.worker.js\");\n","\"use strict\";\n// import * as tf from \"@tensorflow/tfjs\";  // Can not use it this way, only through import scripts\nimportScripts(\"https://cdn.jsdelivr.net/npm/@tensorflow/tfjs\");\n// importScripts(\"http://mlweb.loria.fr/lalolib.js\");\nimportScripts(\"lalolib.js\");\n// import \"./magenta/magentamusic.js\";\n\n// let a = tf.tensor([100]);\nvar geval = eval; // puts eval into global scope https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval\ngeval(\"var input = (id,x) => {}\");\ngeval(\"var output = (x) => {return 0;}\");\ngeval(`\nvar loadResponders = {};\nvar sema = {\n  saveF32Array: (name, val) => {\n    postMessage({\n      \"func\": \"save\",\n      \"name\": name,\n      \"val\": val\n    });\n    return 0;\n  },\n  loadF32Array: (name, onload) => {\n    postMessage({\n      \"func\": \"load\",\n      \"name\": name,\n    });\n    loadResponders[name] = onload;\n    return 0;\n  },\n  download: (name) => {\n    postMessage({\n      \"func\": \"download\",\n      \"name\": name,\n    });\n  },\n  sendCode: (code) => {\n    postMessage({\n      \"func\": \"sendcode\",\n      \"code\": code,\n    });\n  }\n\n};\n`);\n\nonmessage = m => {\n\n  // console.log('DEBUG:ml.worker:onmessage');\n  // console.log(m);\n\n\tif (m.data.eval !== undefined) {\n\t\tlet evalRes = geval(m.data.eval);\n\t\tif (evalRes != undefined) {\n      console.log(evalRes);\n    }\n\t\telse console.log(\"0\");\n\t}\n  else if (\"val\" in m.data) {\n    // console.log(\"DEBUG:ml.worker:onmessage:val\");\n\t\tlet val = m.data.val;\n\t\t// console.log(val);\n\t\tval = JSON.parse(`[${val}]`);\n\t\t// console.log(val);\n\t\t// console.log(loadResponders);\n\t\tloadResponders[m.data.name](val);\n\t\tdelete loadResponders[m.data.name];\n\t}\n  else if (m.data.type === \"model-input-data\") {\n    input(m.data.id, m.data.value);\n  }\n  else if(m.data.type === \"model-output-data-request\"){\n\t\tpostMessage({\n\t\t\tfunc: \"data\",\n\t\t\tworker: \"testmodel\",\n\t\t\tvalue: output(m.data.value),\n\t\t\ttranducerName: m.data.transducerName\n\t\t});\n\t}\n};\n"],"sourceRoot":""}