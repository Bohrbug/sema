!function(n){var e={};function a(o){if(e[o])return e[o].exports;var t=e[o]={i:o,l:!1,exports:{}};return n[o].call(t.exports,t,t.exports,a),t.l=!0,t.exports}a.m=n,a.c=e,a.d=function(n,e,o){a.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:o})},a.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},a.t=function(n,e){if(1&e&&(n=a(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var o=Object.create(null);if(a.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var t in n)a.d(o,t,function(e){return n[e]}.bind(null,t));return o},a.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return a.d(e,"a",e),e},a.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},a.p="/",a(a.s=0)}([function(n,e,a){"use strict";importScripts("https://cdn.jsdelivr.net/npm/@tensorflow/tfjs"),importScripts("./lalolib.js"),importScripts("./svd.js"),importScripts("./lodash.js");var o=eval;o("var input = (value, channel) => {}"),o("var output = (value,channel) => {postMessage({func:'data', val:value, ch:channel});}"),o('\nvar loadResponders = {};\nvar sema = {\n  saveF32Array: (name, val) => {\n    postMessage({\n      "func": "save",\n      "name": name,\n      "val": val\n    });\n    return 0;\n  },\n  loadF32Array: (name, onload) => {\n    postMessage({\n      "func": "load",\n      "name": name,\n    });\n    loadResponders[name] = onload;\n    return 0;\n  },\n  download: (name) => {\n    postMessage({\n      "func": "download",\n      "name": name,\n    });\n  },\n  sendCode: (code) => {\n    postMessage({\n      "func": "sendcode",\n      "code": code,\n    });\n  },\n  pbcopy: (msg) => {\n    postMessage({\n      "func": "pbcopy",\n      "msg": msg,\n    });\n  },\n  sendBuffer: (bufferName,data) => {\n      postMessage({\n          "func": "sendbuf",\n          "name": bufferName,\n          "data": data\n      });\n  },\n  env: {\n    saveLocal: (name) => {\n      postMessage({\n            "func": "envsave",\n            "name": name,\n            "storage":"local"\n        }\n      )\n    },\n    loadLocal: (name) => {\n      postMessage({\n            "func": "envload",\n            "name": name,\n            "storage":"local"\n        }\n      )\n    },\n    saveToPB: () => {\n      postMessage({\n            "func": "envsave",\n            "storage":"pastebuffer"\n        }\n      )\n    },\n    loadGist: (gistid) => {\n      postMessage({\n            "func": "envload",\n            "name": gistid,\n            "storage":"gist"\n        }\n      )\n    },\n\n  },\n  //run in the DOM\n  domeval: (code) => {\n    postMessage({\n          "func": "domeval",\n          "code": code,\n      }\n    )\n  },\n  peerinfo: () => {\n    postMessage ({\n      "func": "peerinfo"\n    });\n    console.log("Your peer ID has been copied to the paste buffer")\n  }\n};\n'),onmessage=n=>{if(void 0!==n.data.eval)try{let e=o(n.data.eval);null!=e?console.log(e):console.log("done")}catch(n){console.log("Code eval exception: "+n)}else if("val"in n.data){let e=n.data.val;e=JSON.parse(`[${e}]`),loadResponders[n.data.name](e),delete loadResponders[n.data.name]}else"model-input-data"===n.data.type&&input(n.data.value,n.data.ch)}}]);